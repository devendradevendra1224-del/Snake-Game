import pygame
import time
import random

# --- 1. Initialize Pygame and Setup ---

# Initialize Pygame
pygame.init()

# Define Colors
black = pygame.Color(0, 0, 0)
white = pygame.Color(255, 255, 255)
red = pygame.Color(255, 0, 0)
green = pygame.Color(0, 255, 0)

# Window dimensions
window_x = 720
window_y = 480

# Game window setup
pygame.display.set_caption('Python Snake Game')
game_window = pygame.display.set_mode((window_x, window_y))

# FPS (frames per second) controller
fps = pygame.time.Clock()

# Snake and game settings
snake_speed = 15
square_size = 10
score = 0

# Initial snake position and body
snake_position = [100, 50]
# [x1, y1] is the head, the rest are body segments
snake_body = [[100, 50], [90, 50], [80, 50]]

# Initial food position (must be a multiple of square_size)
food_position = [random.randrange(1, (window_x//square_size)) * square_size,
                 random.randrange(1, (window_y//square_size)) * square_size]
food_spawn = True

# Initial direction (RIGHT, LEFT, UP, DOWN)
direction = 'RIGHT'
change_to = direction

# --- 2. Functions ---

# Function to display score
def show_score(choice, color, font, size):
    score_font = pygame.font.SysFont(font, size)
    score_surface = score_font.render('Score : ' + str(score), True, color)
    score_rect = score_surface.get_rect()
    game_window.blit(score_surface, score_rect)

# Game Over function
def game_over():
    my_font = pygame.font.SysFont('times new roman', 50)
    game_over_surface = my_font.render(
        'Your Score is: ' + str(score), True, red)
    game_over_rect = game_over_surface.get_rect()
    # Setting position of the text
    game_over_rect.midtop = (window_x / 2, window_y / 4)
    # blit will draw the text on screen
    game_window.blit(game_over_surface, game_over_rect)
    pygame.display.flip()
    
    # Wait for 2 seconds before quitting
    time.sleep(2) 
    pygame.quit()
    quit()

# --- 3. Main Game Loop ---

while True:
    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
        # Key presses to change direction
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP or event.key == pygame.K_w:
                change_to = 'UP'
            if event.key == pygame.K_DOWN or event.key == pygame.K_s:
                change_to = 'DOWN'
            if event.key == pygame.K_LEFT or event.key == pygame.K_a:
                change_to = 'LEFT'
            if event.key == pygame.K_RIGHT or event.key == pygame.K_d:
                change_to = 'RIGHT'

    # Ensure the snake doesn't reverse direction instantly
    if change_to == 'UP' and direction != 'DOWN':
        direction = 'UP'
    if change_to == 'DOWN' and direction != 'UP':
        direction = 'DOWN'
    if change_to == 'LEFT' and direction != 'RIGHT':
        direction = 'LEFT'
    if change_to == 'RIGHT' and direction != 'LEFT':
        direction = 'RIGHT'

    # Move the snake (update head position)
    if direction == 'UP':
        snake_position[1] -= square_size
    if direction == 'DOWN':
        snake_position[1] += square_size
    if direction == 'LEFT':
        snake_position[0] -= square_size
    if direction == 'RIGHT':
        snake_position[0] += square_size

    # Snake body mechanics: New head, old tail removal (unless food is eaten)
    snake_body.insert(0, list(snake_position))
    
    # Check for food collision
    if snake_position[0] == food_position[0] and snake_position[1] == food_position[1]:
        score += 10
        snake_speed += 0.5 # Optional: increase speed
        food_spawn = False # Don't pop the tail segment (snake grows)
    else:
        snake_body.pop() # Pop the last segment (snake moves)

    # Spawn new food
    if not food_spawn:
        food_position = [random.randrange(1, (window_x//square_size)) * square_size,
                         random.randrange(1, (window_y//square_size)) * square_size]
        food_spawn = True
        
    # Drawing on screen
    game_window.fill(black) # Fill background

    # Draw the snake body
    for pos in snake_body:
        # pygame.Rect(left, top, width, height)
        pygame.draw.rect(game_window, green,
                         pygame.Rect(pos[0], pos[1], square_size, square_size))

    # Draw the food
    pygame.draw.rect(game_window, red, pygame.Rect(
        food_position[0], food_position[1], square_size, square_size))

    # Check for Game Over conditions

    # 1. Hitting the walls
    if snake_position[0] < 0 or snake_position[0] > window_x - square_size:
        game_over()
    if snake_position[1] < 0 or snake_position[1] > window_y - square_size:
        game_over()

    # 2. Hitting its own body (check head against all body segments except the first)
    for block in snake_body[1:]:
        if snake_position[0] == block[0] and snake_position[1] == block[1]:
            game_over()

    # Display score
    show_score(1, white, 'consolas', 20)

    # Refresh game screen
    pygame.display.update()

    # Control game speed
    fps.tick(snake_speed)